# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  JAVA_VERSION: "12.x"
  FLUTTER_CHANNEL: "stable"
  PROPERTIES_PATH: "./android/key.properties"
  STORE_File_PATH: "./android/upload-keystore.jks"


jobs:
  flutter_test:
    name: Run Flutter assigned build appbundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VERSION}}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{env.FLUTTER_CHANNEL}}

      # Creating the key.properties file
      - run: |
          echo keyPassword=\${{ secrets.ANDROID_KEYALIAS_NAME }} > ${{env.PROPERTIES_PATH}}
          echo storePassword=\${{ secrets.ANDROID_KEYSTORE_PASS }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=\${{ secrets.ANDROID_KEYALIAS_NAME }} >> ${{env.PROPERTIES_PATH}}

      # Decoding base64 key into a file
      - run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > ${{env.STORE_File_PATH}}
          echo storeFile=\${{ secrets.STORE_File_PATH }} >> ${{env.PROPERTIES_PATH}}

      # Get dependencies and make assigned appbundle
      - run: |
          flutter pub get
          flutter build appbundle

